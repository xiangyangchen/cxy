Python 支持字符串格式化输出，尽管这样可能遇到非常复杂的表达式，但最基本的是用法就是将一个值插入到一个有字符串格式符%s的字符串中。如，例1：

name = '阿昌'
print("大家好，我叫%s"%name)

输出：
大家好，我叫阿昌


在程序中，看到%s这样的操作符，这就是python中字符串格式化的符号。除此之外，还可以用%符号对其他类型的数据进行格式化。常见的格式化符号如下表。

常见的格式化符号
格式符号	转换
%s	通过str()字符串转换来格式化
%u	无符号的十进制整数
%d	有符号的十进制整数
%o	八进制整数
%x	十六进制整数，小写字母
%X	十六进制整数，大写字母
%e	浮点数字(科学计数法)
%E	浮点数字(科学计数法，用E代替e)
%f	浮点实数
%g	浮点数字(根据值的大小采用%e或%f)
%G	浮点数字(类似于%g)
————————————————
语法格式：
可以用如下的方式，对格式进行进一步的控制：

%[(name)][flags][width].[precision]typecode

(name)为命名

flags可以有+,-,' '或0。+表示右对齐。-表示左对齐。' '为一个空格，表示在正数的左侧填充一个空格，从而与负数对齐。0表示使用0填充。

width表示显示宽度

precision表示小数点后精度

————————————————
例2，九九乘法表：

1）：
i=1
while i<10: 	#控制行，1到9
    j=1
    while j <= i: 	#控制每行显示的数量，1到9
        print("%d*%d=%d"%(i,j,i*j),end=' ') 		#输出
        j+=1 		#每行显示的数量加1
    print("\n") 	#每一行结束换行
    i+=1 		#行数加1


2）：
for i in range(1,10):
    print()
    for j in range(1,i+1):
        print('%d*%d=%d' % (i,j,i*j),end=' ')



输出

1*1=1 
 
2*1=2 2*2=4 
 
3*1=3 3*2=6 3*3=9 
 
4*1=4 4*2=8 4*3=12 4*4=16 
 
5*1=5 5*2=10 5*3=15 5*4=20 5*5=25 
 
6*1=6 6*2=12 6*3=18 6*4=24 6*5=30 6*6=36 
 
7*1=7 7*2=14 7*3=21 7*4=28 7*5=35 7*6=42 7*7=49 
 
8*1=8 8*2=16 8*3=24 8*4=32 8*5=40 8*6=48 8*7=56 8*8=64 
 
9*1=9 9*2=18 9*3=27 9*4=36 9*5=45 9*6=54 9*7=63 9*8=72 9*9=81 

